/**
 * This question is asked by Google. You are given two strings, 
 * s and t which only consist of lowercase letters. 
 * t is generated by shuffling the letters in s as well as potentially adding an additional random character. 
 * Return the letter that was randomly added to t if it exists, otherwise, return ’  ‘.
Note: You may assume that at most one additional character can be added to t.

Ex: Given the following strings...

s = "foobar", t = "barfoot", return 't'
s = "ide", t = "idea", return 'a'
s = "coding", t "ingcod", return ''
 */

/**
 * 
 * @param {string} s 
 * @param {string} t 
 * @returns {string}
 */
function solution(s, t) {
    if (s.length === t.length) {
        return ''
    }

    const sortedS = s.split('').sort()
    const sortedT =  t.split('').sort()

    for (let i = 0; i < sortedT.length; i++) {
        if (sortedT[i] !== sortedS[i]) {
            return sortedT[i]
        }
    }
    
    return sortedT[sortedT.length-1]
}


function test(result,answer) {
    const start = Date.now()
    if (result === answer) {
        console.log(result, '==' ,answer)
    } else {
        console.error(result, '!=', answer)
    }
    const end = Date.now()
    console.log(`${end-start}ms`)
}

test(solution('foobar', 'barfoot'), 't')
test(solution('ide', 'idea'), 'a')
test(solution('coding', 'ingcod'), '')


